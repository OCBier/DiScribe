@model IEnumerable<DiScribe.WebMVC.Models.MeetingClass>

@{
    ViewData["Title"] = "Meeting Classes";
}

<br />
<p>
    @using (Html.BeginForm("Index", "Meetings", FormMethod.Get))
    {
        <b>Search:</b>
    <p>Note if you don't specify a subject, we will show all subjects. If you don't specify earliest start date, we will set the earliest start date to be 30 days before today. If you donnot specify latest start date, we will set the latest start date to be 30 days after today.</p>
    <label class="control-label">Meeting Subject</label>
    <input type="text" id="subject" name="subject" value="@(ViewBag.Subject)" />
    <label class="control-label">Earliest Start Date</label>
    <input type="date" id="earliestDate" name="earliestDate" value="@(ViewBag.EarliestDate)" />
    <label class="control-label">Latest Start Date</label>
    <input type="date" id="latestDate" name="latestDate" value="@(ViewBag.LatestDate)" />

    <div class="form-group">
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>
}
    </p>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">@Html.DisplayNameFor(model => model.MeetingSubject)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.MeetingStartDateTime)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.MeetingEndDateTime)</th>
                <th scope="col">Meeting Minutes</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="5">
                        No Matching Record
                    </td>
                </tr>
            }
            else
            {
                //foreach (var item in Model)
                for(int i=0; i<Model.Count(); i++)
                {
                    var item = Model.ElementAt(i);
                    var filename = "filename" + i.ToString();
                    var filetext = "filetext" + i.ToString();
                        <tr>
                        <td>@item.MeetingSubject</td>
                        <td>@item.MeetingStartDateTime</td>
                        <td>@item.MeetingEndDateTime</td>
                        <td>
                            <!--<form onsubmit="download(this['filename'].value, this['filetext'].value)">-->
                            <div>
                                <textarea name="@filename" style="display:none;">@item.MeetingSubject</textarea>
                                <textarea name="@filetext" style="display:none;">@item.MeetingMinutes</textarea>
                                <!--<input type="submit" value="Download">-->
                                
                                <button onclick="download(document.getElementsByName('@filename')[0].value, document.getElementsByName('@filetext')[0].value)">Download</button>
                            </div>                        
                            <!--</form>-->
                        </td>
                        </tr>
                }
            }
</tbody>
    </table>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>
            function download(filename, text) {
              //ViewBag.Subject = subject;
              //ViewBag.EarliestDate = earliestDate.ToString("yyyy-MM-dd");
              //ViewBag.LatestDate = latestDate.ToString("yyyy-MM-dd");
              var filename1 = filename.split(' ').join('_') + ".txt";
                var element = document.createElement('a');
                //var data = new Blob(text, { type: 'text/plain' });
                //var url = window.URL.createObjectURL(data);
                //element.setAttribute('href', url);
                element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
              //element.setAttribute('target', '_blank');
              element.setAttribute('download', filename1);

              element.style.display = 'none';
              document.body.appendChild(element);

              element.click();
              //window.URL.revokeObjectURL(url);
              document.body.removeChild(element);
           }
        </script>
    }
